version: "3.8"
services:
  postgres-db:
    image: postgres:15.4-alpine3.17
    restart: always
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - ../database_structure.sql:/docker-entrypoint-initdb.d/01_database_structure.sql
      - ../database_data.sql:/docker-entrypoint-initdb.d/02_database_data.sql
      - postgres-data:/var/lib/postgresql/data/
    networks:
      - acosta-rep-network

  nestjs-app:
    build:
      context: ../../ # Path to the directory containing the Dockerfile
      dockerfile: Dockerfile
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - ../../BACK_UPS:/usr/app/src/KEEP_TRACK:rw
    networks:
      - acosta-rep-network
    depends_on:
      - postgres-db
    env_file:
      - ../../.env

  hasura:
    image: hasura/graphql-engine:v2.36.1
    restart: always
    ports:
      - "8080:8080" # Mapping Hasura GraphQL Engine port
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-db:5432/postgres
      DB_URL_FROM_ENV: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-db:5432/postgres
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # Enabling Hasura Console (for development purposes)
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_ADMIN_SECRET_KEY}
      HASURA_GRAPHQL_V1_BOOLEAN_NULL_COLLAPSE: true
      HASURA_GRAPHQL_CORS_DOMAIN: ${HASURA_CORS_DOMAIN}
      HASURA_GRAPHQL_JWT_SECRET: ${HASURA_JWT_SECRET}
    volumes:
      - ../hasura-metadata.json:/hasura_metadata.json
    networks:
      - acosta-rep-network
    depends_on:
      - postgres-db

networks:
  acosta-rep-network:

volumes:
  postgres-data:
